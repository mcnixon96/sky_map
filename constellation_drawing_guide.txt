TOTAL NUMBER OF CONSTELLATIONS TO DO: 31

CONSTELLATIONS ADDED: 9
Cassiopeia, Orion, Ursa Major, Cygnus, Gemini, Perseus, Taurus, Andromeda, Auriga, Cepheus, Bootes

CONSTELLATIONS REMAINING: 22
Draco, Ursa Minor, Aquila, Hercules, Lyra, Ophiuchus, Sagittarius, Scorpius, Cancer, Crater, Hydra, 
Leo, Virgo, Canis Major, Cetus, Eridanus, Aquarius, Capricornus, Pegasus, Pisces

The more sensible way to do this would probably be to define a function that connects 2 given stars with a red line, and just find the 
required stars for each constellation, but since I'm not using a consistent minimum brightness and also since copying and pasting is easy 
I've been doing it the following way:

1. Make arrays of the ra and dec coordinates for the brightest stars in the constellation.

Example (Cygnus):

    Cygnus_ra=np.array([])
    Cygnus_dec=np.array([])
    
    for star in range(len(north_data)):
        if north_data[star][29] == 'Cyg':
            if float(north_data[star][13])<=3.5:
                Cygnus_ra=np.append(Cygnus_ra,ra[star])
                Cygnus_dec=np.append(Cygnus_dec,dec[star])

My method for choosing how many stars count as the 'brightest' is just adding stars until the constellation looks the way it normally
does on the sky (use Wikipedia for reference). You might need to find the abbreviated name of the constellation - there's a print
statement you can uncomment in the code.

Note that since astronomy is silly, the magnitude scale of brightness is defined backwards, so that brighter stars have lower magnitudes. 
Here I have taken all stars in the constellation with magnitudes less than 3.5 (might need to stretch to 4 in some cases).

2. Plot the lines of the constellation on to the sky chart.

It's helpful to comment out the 'plotting all stars' bits at the end of the function while doing this.

My method has been first of all to plot all of the constellation stars in red and draw it on a piece of paper. Then I plot one star at a 
time in white and note down its position in the list. Then just adapt three lines of code to plot the line - for example, if your first 
line joins star 3 to star 4 in Cygnus:

    Cyg_line_0_ra=np.array([Cygnus_ra[3],Cygnus_ra[4]])
    Cyg_line_0_dec=np.array([Cygnus_dec[3],Cygnus_dec[4]])
    ax.plot(Cyg_line_0_ra,Cyg_line_0_dec,'r')

Repeat this for each pair of stars that need joining up.

If anything is confusing, look at the chunk of code starting with the comment "Lines for Cygnus" and follow that.

Have fun :) if I do any more of them I'll work backwards from the end of the list of constellations, so if you work from the start there
shouldn't be any overlap.
